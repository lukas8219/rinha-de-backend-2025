name: CI

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write
  pull-requests: write
  issues: write

env:
  REGISTRY: docker.io
  IMAGE_NAME: lukas8219/rinha-de-backend-2025

jobs:
  validate-ssh-key:
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Test SSH connection to GitHub
        run: |
          echo "Testing SSH connection to GitHub..."
          ssh -T git@github.com || true
          
          echo "Testing SSH connection to fork repository..."
          ssh -T git@github.com 2>&1 | grep -q "successfully authenticated" && echo "✅ SSH key is valid for GitHub" || {
            echo "❌ SSH key validation failed"
            exit 1
          }

  build-and-push:
    runs-on: ubuntu-latest
    needs: validate-ssh-key
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate tag from SHA and timestamp
        id: gen_tag
        run: |
          SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-9)
          TS_SHORT=$(date +%s)
          TAG="main-${SHA_SHORT}-${TS_SHORT}"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "tag=$TAG" >> $GITHUB_OUTPUT


      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push main image (Dockerfile)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          target: app
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-app:latest, ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-app:${{ steps.gen_tag.outputs.tag }}

      - name: Build and push consumer image (Dockerfile.consumer)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          target: worker
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-worker:latest, ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-worker:${{ steps.gen_tag.outputs.tag }}

  update-fork:
    runs-on: ubuntu-latest
    needs: [validate-ssh-key, build-and-push]
    
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v3

      - name: Checkout fork repository
        uses: actions/checkout@v3
        with:
          repository: lukas8219/rinha-de-backend-2026
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          path: fork-repo

      - name: Generate branch name
        id: gen_branch
        run: |
          BRANCH_NAME="automate-pr-$(date +%Y%m%d-%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Configure git
        run: |
          cd fork-repo
          git config user.name "GitHub Actions[lukas8219]"
          git config user.email "lukas8219@gmail.com"

      - name: Create and checkout new branch
        run: |
          cd fork-repo
          git checkout -b ${{ env.BRANCH_NAME }}

      - name: Clean up files and update docker-compose
        run: |
          cd fork-repo
          # Remove *.logs and *.json files from participantes/luucaspole-crystal/
          if [ -d "participantes/luucaspole-crystal" ]; then
            find participantes/luucaspole-crystal -name "*.logs" -type f -delete
            find participantes/luucaspole-crystal -name "*.json" -type f -delete
            echo "Removed *.logs and *.json files from participantes/luucaspole-crystal/"
          else
            echo "Directory participantes/luucaspole-crystal does not exist, creating it..."
            mkdir -p participantes/luucaspole-crystal
          fi
          
          # Copy docker-compose.yaml from current repo to fork
          cp ../docker-compose.yaml participantes/luucaspole-crystal/docker-compose.yaml
          cp ../nginx.conf participantes/luucaspole-crystal/nginx.conf
          echo "Updated docker-compose.yaml in participantes/luucaspole-crystal/"

      - name: Commit and push changes
        run: |
          cd fork-repo
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update submission: remove logs/json files and update docker-compose.yaml
            
            - Removed *.logs and *.json files from participantes/luucaspole-crystal/
            - Updated docker-compose.yaml with latest version
            - Updated nginx.conf with latest version
            - Generated from SHA: ${{ github.sha }}"
            
            git push origin ${{ env.BRANCH_NAME }}
            echo "Changes pushed to branch: ${{ env.BRANCH_NAME }}"
          fi

      - name: Create Pull Request
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const response = await github.rest.pulls.create({
                owner: 'zanfranceschi',
                repo: 'rinha-de-backend-2025',
                title: 'Automated submission update from luucaspole-crystal',
                head: 'lukas8219:${{ env.BRANCH_NAME }}',
                base: 'main'
              });
              
              console.log(\`Pull request created: #\${response.data.number}\`);
              console.log(\`PR URL: \${response.data.html_url}\`);
              
            } catch (error) {
              if (error.message.includes('A pull request already exists')) {
                console.log('A pull request already exists for this branch');
              } else {
                console.error('Error creating pull request:', error);
                throw error;
              }
            }

