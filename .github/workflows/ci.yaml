name: CI

on:
  push:
    paths:
      - '**.cr'
      - 'shard.lock'
      - 'shard.yml'
      - 'Dockerfile'
      - '.dockerignore'
      - '!**/*.md'
      - '!**/*.yaml'
    branches:
      - main
env:
  REGISTRY: docker.io
  IMAGE_NAME: lukas8219/rinha-de-backend-2025

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      app-image-tag: ${{ steps.set_outputs.outputs.app-image-tag }}
      worker-image-tag: ${{ steps.set_outputs.outputs.worker-image-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate tag from SHA and timestamp
        id: gen_tag
        run: |
          SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-9)
          TS_SHORT=$(date +%s)
          TAG="main-${SHA_SHORT}-${TS_SHORT}"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "tag=$TAG" >> $GITHUB_OUTPUT


      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push main image (Dockerfile)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          target: app
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-app:latest, ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-app:${{ steps.gen_tag.outputs.tag }}

      - name: Build and push consumer image (Dockerfile.consumer)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          target: worker
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-worker:latest, ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-worker:${{ steps.gen_tag.outputs.tag }}

      - name: Set image tag outputs
        id: set_outputs
        env:
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          TAG: ${{ steps.gen_tag.outputs.tag }}
        run: |
          echo "🔍 Debug: Checking environment variables and step outputs..."
          echo "REGISTRY: $REGISTRY"
          echo "IMAGE_NAME: $IMAGE_NAME"
          echo "Generated tag: $TAG"
          
          APP_IMAGE_TAG="$REGISTRY/$IMAGE_NAME-app:$TAG"
          WORKER_IMAGE_TAG="$REGISTRY/$IMAGE_NAME-worker:$TAG"
          
          echo "🔍 Debug: Generated image tags before output..."
          echo "APP_IMAGE_TAG: $APP_IMAGE_TAG"
          echo "WORKER_IMAGE_TAG: $WORKER_IMAGE_TAG"
          
          echo "app-image-tag=$APP_IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "worker-image-tag=$WORKER_IMAGE_TAG" >> $GITHUB_OUTPUT
          
          echo "📦 Final image tags written to output:"
          echo "  App image: $APP_IMAGE_TAG"
          echo "  Worker image: $WORKER_IMAGE_TAG"
          
          echo ""
          echo "💡 To update your submission with these images, use the 'Update Submission' workflow:"
          echo "   Go to Actions → Update Submission → Run workflow"
          echo "   Use these image tags as inputs:"
          echo "   - App image tag: $APP_IMAGE_TAG"
          echo "   - Worker image tag: $WORKER_IMAGE_TAG"

