name: CI Pingora

on:
  push:
    paths:
      - '**.rs'
      - 'Cargo.toml'
      - 'Dockerfile.pingora'
      - 'pingora-server.rs'
      - '.dockerignore'
      - '!**/*.md'
      - '!**/*.yaml'
    branches:
      - main
env:
  REGISTRY: docker.io
  IMAGE_NAME: lukas8219/rinha-de-backend-2025-load-balancer

jobs:
  build-and-push-pingora:
    runs-on: ubuntu-latest
    outputs:
      pingora-image-tag: ${{ steps.set_outputs.outputs.pingora-image-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate tag from SHA and timestamp
        id: gen_tag
        run: |
          SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-9)
          TS_SHORT=$(date +%s)
          TAG="pingora-${SHA_SHORT}-${TS_SHORT}"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Pingora image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.pingora
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-pingora:latest, ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-pingora:${{ steps.gen_tag.outputs.tag }}

      - name: Set image tag outputs
        id: set_outputs
        env:
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          TAG: ${{ steps.gen_tag.outputs.tag }}
        run: |
          PINGORA_IMAGE_TAG="$REGISTRY/$IMAGE_NAME-pingora:$TAG"
          echo "pingora-image-tag=$PINGORA_IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "ðŸ’¡ Pingora Docker image built and pushed successfully!"
          echo "   Pingora image: $PINGORA_IMAGE_TAG" 