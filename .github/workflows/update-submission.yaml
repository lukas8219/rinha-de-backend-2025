name: Update Submission

on:
  workflow_dispatch:

jobs:
  validate-ssh-key:
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Test SSH connection to GitHub
        run: |
          echo "🔑 Testing SSH connection to GitHub..."
          
          # Test basic GitHub SSH connection
          SSH_OUTPUT=$(ssh -T git@github.com 2>&1 || true)
          echo "SSH Output: $SSH_OUTPUT"
          
          # Check if authentication was successful
          if echo "$SSH_OUTPUT" | grep -q "successfully authenticated"; then
            echo "✅ SSH key is valid for GitHub"
            
            # Extract username from the output
            USERNAME=$(echo "$SSH_OUTPUT" | grep "successfully authenticated" | sed 's/.*Hi \([^!]*\)!.*/\1/')
            echo "🎉 Authenticated as: $USERNAME"
          else
            echo "❌ SSH key validation failed"
            echo "Expected to see 'successfully authenticated' in the output"
            echo "Actual output: $SSH_OUTPUT"
            exit 1
          fi
          
          echo "🔍 Testing access to fork repository..."
          # Test if we can access the specific repository
          git ls-remote git@github.com:lukas8219/rinha-de-backend-2026.git HEAD > /dev/null 2>&1 && {
            echo "✅ Successfully accessed fork repository"
          } || {
            echo "❌ Cannot access fork repository - check if SSH key has proper permissions"
            exit 1
          }

  update-fork:
    runs-on: ubuntu-latest
    needs: validate-ssh-key
    
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v3

      - name: Checkout fork repository
        uses: actions/checkout@v3
        with:
          repository: lukas8219/rinha-de-backend-2026
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          path: fork-repo

      - name: Generate branch name
        id: gen_branch
        run: |
          BRANCH_NAME="automate-pr-$(date +%Y%m%d-%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Configure git
        run: |
          cd fork-repo
          git config user.name "GitHub Actions[lukas8219]"
          git config user.email "lukas8219@gmail.com"

      - name: Create and checkout new branch
        run: |
          cd fork-repo
          git checkout -b ${{ env.BRANCH_NAME }}

          

      - name: Clean up files and update configuration
        run: |
          cd fork-repo
          # Remove *.logs and *.json files from participantes/luucaspole-crystal/
          if [ -d "participantes/luucaspole-crystal" ]; then
            find participantes/luucaspole-crystal -name "*.logs" -type f -delete
            find participantes/luucaspole-crystal -name "partial-results.json" -type f -delete
            echo "🧹 Removed *.logs and partial-results.json files from participantes/luucaspole-crystal/"
          else
            echo "📁 Directory participantes/luucaspole-crystal does not exist, creating it..."
            mkdir -p participantes/luucaspole-crystal
          fi
          
          # Copy current docker-compose.yaml and nginx.conf from current repo to fork
          cp ../docker-compose.yaml participantes/luucaspole-crystal/docker-compose.yaml
          cp ../nginx.conf participantes/luucaspole-crystal/nginx.conf
          echo "📝 Updated docker-compose.yaml and nginx.conf in participantes/luucaspole-crystal/"

      - name: Remove build sections from docker-compose
        run: |
          cd fork-repo/participantes/luucaspole-crystal
          
          # Install yq if not available
          if ! command -v yq &> /dev/null; then
            echo "📦 Installing yq..."
            sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
            sudo chmod +x /usr/local/bin/yq
          fi
          
          echo "🔧 Removing build sections from docker-compose.yaml..."
          
          # Remove all build sections from services
          # Method 1: Target specific known services (more reliable)
          yq eval 'del(.services.app1.build, .services.consumer.build)' -i docker-compose.yaml
          
          # Method 2: If the above doesn't catch all services, try recursive approach
          # yq eval 'del(.services | .. | select(has("build")).build)' -i docker-compose.yaml
          
          # Fix any !!merge syntax issues (yq sometimes outputs this incorrectly)
          sed -i 's/!!merge <</<</' docker-compose.yaml
          
          echo "✅ Build sections removed from docker-compose.yaml"
          
          # Show what services are defined (for verification)
          echo "📋 Services in docker-compose.yaml:"
          yq eval '.services | keys' docker-compose.yaml

      - name: Commit and push changes
        run: |
          cd fork-repo
          git add -A
          if git diff --cached --quiet; then
            echo "ℹ️  No changes to commit"
          else
            git commit -m "chore(participantes/luucaspole-crystal): update submission with latest configuration
            
            - Removed *.logs and partial-results.json files from participantes/luucaspole-crystal/
            - Updated docker-compose.yaml with latest version
            - Updated nginx.conf with latest version
            - Source SHA: ${{ github.sha }}
            - Triggered manually via workflow_dispatch"
            
            git push origin ${{ env.BRANCH_NAME }}
            echo "✅ Changes pushed to branch: ${{ env.BRANCH_NAME }}"
          fi