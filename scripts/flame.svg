<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>pingora_core::protocols::l4::stream::Stream::set_buffer (20,202,020 samples, 1.00%)</title><rect x="836.0" y="549" width="11.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="839.00" y="559.5" ></text>
</g>
<g >
<title>call_on_irq_stack (10,101,010 samples, 0.50%)</title><rect x="1166.4" y="277" width="5.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1169.40" y="287.5" ></text>
</g>
<g >
<title>virtqueue_add_outbuf (10,101,010 samples, 0.50%)</title><rect x="104.4" y="117" width="5.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="107.40" y="127.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (353,535,350 samples, 17.50%)</title><rect x="15.9" y="453" width="206.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="18.90" y="463.5" >__arm64_sys_sendto</text>
</g>
<g >
<title>tokio::runtime::io::registration::Registration::poll_ready (20,202,020 samples, 1.00%)</title><rect x="942.2" y="533" width="11.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="945.20" y="543.5" ></text>
</g>
<g >
<title>pingora_core::protocols::http::server::Session::enable_retry_buffering (10,101,010 samples, 0.50%)</title><rect x="1089.7" y="565" width="5.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1092.70" y="575.5" ></text>
</g>
<g >
<title>nf_conntrack_in (10,101,010 samples, 0.50%)</title><rect x="358.1" y="325" width="5.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="361.10" y="335.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (353,535,350 samples, 17.50%)</title><rect x="15.9" y="565" width="206.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="18.90" y="575.5" >&lt;&amp;mio::net::tcp::stream::Tc..</text>
</g>
<g >
<title>ip_queue_xmit (20,202,020 samples, 1.00%)</title><rect x="340.4" y="357" width="11.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="343.40" y="367.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (10,101,010 samples, 0.50%)</title><rect x="1001.2" y="405" width="5.9" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1004.20" y="415.5" ></text>
</g>
<g >
<title>&lt;pingora_core::protocols::l4::stream::Stream as pingora_core::protocols::digest::GetSocketDigest&gt;::set_socket_digest (10,101,010 samples, 0.50%)</title><rect x="251.9" y="565" width="5.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="254.90" y="575.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.50%)</title><rect x="1119.2" y="549" width="5.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1122.20" y="559.5" ></text>
</g>
<g >
<title>el0_svc (80,808,080 samples, 4.00%)</title><rect x="305.0" y="469" width="47.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="308.00" y="479.5" >el0_..</text>
</g>
<g >
<title>tcp_recvmsg (80,808,080 samples, 4.00%)</title><rect x="305.0" y="405" width="47.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="308.00" y="415.5" >tcp_..</text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="977.6" y="485" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="980.60" y="495.5" ></text>
</g>
<g >
<title>tokio::runtime::handle::Handle::current (10,101,010 samples, 0.50%)</title><rect x="800.6" y="517" width="5.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="803.60" y="527.5" ></text>
</g>
<g >
<title>clock_nanosleep (50,505,050 samples, 2.50%)</title><rect x="1154.6" y="517" width="29.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1157.60" y="527.5" >cl..</text>
</g>
<g >
<title>local_daif_restore (10,101,010 samples, 0.50%)</title><rect x="1178.2" y="469" width="5.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1181.20" y="479.5" ></text>
</g>
<g >
<title>net_rx_action (10,101,010 samples, 0.50%)</title><rect x="346.3" y="229" width="5.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="349.30" y="239.5" ></text>
</g>
<g >
<title>br_nf_forward.cold (20,202,020 samples, 1.00%)</title><rect x="381.7" y="149" width="11.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="384.70" y="159.5" ></text>
</g>
<g >
<title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (10,101,010 samples, 0.50%)</title><rect x="246.0" y="565" width="5.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="249.00" y="575.5" ></text>
</g>
<g >
<title>lock_sock_nested (10,101,010 samples, 0.50%)</title><rect x="210.6" y="405" width="5.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="213.60" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (90,909,090 samples, 4.50%)</title><rect x="299.1" y="549" width="53.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="302.10" y="559.5" >&lt;&amp;mio..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (10,101,010 samples, 0.50%)</title><rect x="930.4" y="533" width="5.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="933.40" y="543.5" ></text>
</g>
<g >
<title>sock_poll (20,202,020 samples, 1.00%)</title><rect x="1077.9" y="469" width="11.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1080.90" y="479.5" ></text>
</g>
<g >
<title>el1_interrupt (10,101,010 samples, 0.50%)</title><rect x="1166.4" y="325" width="5.9" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1169.40" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10,101,010 samples, 0.50%)</title><rect x="1013.0" y="565" width="5.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1016.00" y="575.5" ></text>
</g>
<g >
<title>tcp_rcv_established (141,414,140 samples, 7.00%)</title><rect x="428.9" y="197" width="82.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="431.90" y="207.5" >tcp_rcv_e..</text>
</g>
<g >
<title>pingora_core::protocols::http::v1::server::HttpSession::write_response_header::_$u7b$$u7b$closure$u7d$$u7d$::h2e249117c2b2bbf5 (10,101,010 samples, 0.50%)</title><rect x="830.1" y="549" width="5.9" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="833.10" y="559.5" ></text>
</g>
<g >
<title>pingora_core::protocols::http::v1::server::HttpSession::init_body_reader (10,101,010 samples, 0.50%)</title><rect x="818.3" y="549" width="5.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="821.30" y="559.5" ></text>
</g>
<g >
<title>do_mem_abort (10,101,010 samples, 0.50%)</title><rect x="836.0" y="469" width="5.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="839.00" y="479.5" ></text>
</g>
<g >
<title>napi_consume_skb (10,101,010 samples, 0.50%)</title><rect x="192.9" y="245" width="5.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="195.90" y="255.5" ></text>
</g>
<g >
<title>__do_softirq (10,101,010 samples, 0.50%)</title><rect x="334.5" y="245" width="5.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="337.50" y="255.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="753.4" y="533" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="756.40" y="543.5" ></text>
</g>
<g >
<title>tcp_ack (10,101,010 samples, 0.50%)</title><rect x="505.6" y="181" width="5.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="508.60" y="191.5" ></text>
</g>
<g >
<title>send (303,030,300 samples, 15.00%)</title><rect x="352.2" y="517" width="177.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="355.20" y="527.5" >send</text>
</g>
<g >
<title>nf_hook_slow (20,202,020 samples, 1.00%)</title><rect x="381.7" y="133" width="11.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="384.70" y="143.5" ></text>
</g>
<g >
<title>nft_do_chain_inet (20,202,020 samples, 1.00%)</title><rect x="381.7" y="117" width="11.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="384.70" y="127.5" ></text>
</g>
<g >
<title>pingora_core::protocols::http::v1::server::HttpSession::respect_keepalive (10,101,010 samples, 0.50%)</title><rect x="824.2" y="549" width="5.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="827.20" y="559.5" ></text>
</g>
<g >
<title>tokio::sync::mpsc::bounded::channel (10,101,010 samples, 0.50%)</title><rect x="977.6" y="549" width="5.9" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="980.60" y="559.5" ></text>
</g>
<g >
<title>inet_sendmsg (292,929,290 samples, 14.50%)</title><rect x="352.2" y="421" width="171.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="355.20" y="431.5" >inet_sendmsg</text>
</g>
<g >
<title>pingora_http::RequestHeader::build (10,101,010 samples, 0.50%)</title><rect x="1107.4" y="565" width="5.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1110.40" y="575.5" ></text>
</g>
<g >
<title>httparse::parse_headers_iter_uninit (10,101,010 samples, 0.50%)</title><rect x="670.8" y="533" width="5.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="673.80" y="543.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.50%)</title><rect x="1101.5" y="549" width="5.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1104.50" y="559.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (50,505,050 samples, 2.50%)</title><rect x="27.7" y="357" width="29.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="30.70" y="367.5" >ip..</text>
</g>
<g >
<title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (10,101,010 samples, 0.50%)</title><rect x="10.0" y="565" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (10,101,010 samples, 0.50%)</title><rect x="346.3" y="309" width="5.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="349.30" y="319.5" ></text>
</g>
<g >
<title>do_nanosleep (20,202,020 samples, 1.00%)</title><rect x="1160.5" y="389" width="11.8" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1163.50" y="399.5" ></text>
</g>
<g >
<title>pingora_http::ResponseHeader::new (10,101,010 samples, 0.50%)</title><rect x="865.5" y="549" width="5.9" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="868.50" y="559.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::poll_read_priv (10,101,010 samples, 0.50%)</title><rect x="806.5" y="533" width="5.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="809.50" y="543.5" ></text>
</g>
<g >
<title>__mprotect (10,101,010 samples, 0.50%)</title><rect x="989.4" y="501" width="5.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="992.40" y="511.5" ></text>
</g>
<g >
<title>sized_strscpy (10,101,010 samples, 0.50%)</title><rect x="387.6" y="69" width="5.9" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="390.60" y="79.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="529.2" y="533" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="532.20" y="543.5" ></text>
</g>
<g >
<title>std::sys::pal::unix::time::Timespec::now (10,101,010 samples, 0.50%)</title><rect x="1125.1" y="533" width="5.9" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1128.10" y="543.5" ></text>
</g>
<g >
<title>call_on_irq_stack (232,323,230 samples, 11.50%)</title><rect x="63.1" y="309" width="135.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="66.10" y="319.5" >call_on_irq_stack</text>
</g>
<g >
<title>security_sock_rcv_skb (10,101,010 samples, 0.50%)</title><rect x="181.1" y="213" width="5.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="184.10" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (10,101,010 samples, 0.50%)</title><rect x="1101.5" y="453" width="5.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1104.50" y="463.5" ></text>
</g>
<g >
<title>tcp_sendmsg (353,535,350 samples, 17.50%)</title><rect x="15.9" y="421" width="206.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="18.90" y="431.5" >tcp_sendmsg</text>
</g>
<g >
<title>common_nsleep (30,303,030 samples, 1.50%)</title><rect x="1160.5" y="421" width="17.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1163.50" y="431.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (323,232,320 samples, 16.00%)</title><rect x="21.8" y="405" width="188.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="24.80" y="415.5" >__tcp_push_pending_frames</text>
</g>
<g >
<title>&lt;tokio::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (20,202,020 samples, 1.00%)</title><rect x="623.6" y="549" width="11.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="626.60" y="559.5" ></text>
</g>
<g >
<title>&lt;tokio::sync::mpsc::chan::Rx&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (10,101,010 samples, 0.50%)</title><rect x="653.1" y="549" width="5.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="656.10" y="559.5" ></text>
</g>
<g >
<title>pingora_proxy::Session::write_response_tasks::_$u7b$$u7b$closure$u7d$$u7d$::hbbfcd7b26d59ad8e (10,101,010 samples, 0.50%)</title><rect x="676.7" y="533" width="5.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="679.70" y="543.5" ></text>
</g>
<g >
<title>veth_xmit (20,202,020 samples, 1.00%)</title><rect x="198.8" y="357" width="11.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="201.80" y="367.5" ></text>
</g>
<g >
<title>mio::poll::Poll::poll (50,505,050 samples, 2.50%)</title><rect x="1060.2" y="565" width="29.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1063.20" y="575.5" >mi..</text>
</g>
<g >
<title>core::ptr::drop_in_place$LT$pingora_core..protocols..http..server..Session..finish..$u7b$$u7b$closure$u7d$$u7d$$GT$::hbd85bff76b2fbb5e (10,101,010 samples, 0.50%)</title><rect x="871.4" y="533" width="5.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="874.40" y="543.5" ></text>
</g>
<g >
<title>&lt;pingora_core::protocols::l4::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (10,101,010 samples, 0.50%)</title><rect x="617.7" y="549" width="5.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="620.70" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (10,101,010 samples, 0.50%)</title><rect x="1001.2" y="437" width="5.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1004.20" y="447.5" ></text>
</g>
<g >
<title>&lt;tokio::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (10,101,010 samples, 0.50%)</title><rect x="664.9" y="533" width="5.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="667.90" y="543.5" ></text>
</g>
<g >
<title>el0t_64_sync (50,505,050 samples, 2.50%)</title><rect x="1060.2" y="533" width="29.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1063.20" y="543.5" >el..</text>
</g>
<g >
<title>el0t_64_sync (40,404,040 samples, 2.00%)</title><rect x="1160.5" y="501" width="23.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1163.50" y="511.5" >e..</text>
</g>
<g >
<title>_ZN13pingora_proxy11proxy_trait9ProxyHttp20early_request_filter28_$u7b$$u7b$closure$u7d$$u7d$17h640494b454955671E.llvm.6880983854631394884 (10,101,010 samples, 0.50%)</title><rect x="877.3" y="533" width="5.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="880.30" y="543.5" ></text>
</g>
<g >
<title>run_timer_softirq (10,101,010 samples, 0.50%)</title><rect x="511.5" y="245" width="5.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="514.50" y="255.5" ></text>
</g>
<g >
<title>bytes::bytes::promotable_even_drop (10,101,010 samples, 0.50%)</title><rect x="1018.9" y="565" width="5.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1021.90" y="575.5" ></text>
</g>
<g >
<title>__netif_rx (10,101,010 samples, 0.50%)</title><rect x="393.5" y="37" width="5.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="396.50" y="47.5" ></text>
</g>
<g >
<title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (50,505,050 samples, 2.50%)</title><rect x="535.1" y="533" width="29.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="538.10" y="543.5" >&lt;c..</text>
</g>
<g >
<title>__do_softirq (10,101,010 samples, 0.50%)</title><rect x="718.0" y="405" width="5.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="721.00" y="415.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (20,202,020 samples, 1.00%)</title><rect x="257.8" y="549" width="11.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="260.80" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (10,101,010 samples, 0.50%)</title><rect x="836.0" y="453" width="5.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="839.00" y="463.5" ></text>
</g>
<g >
<title>br_nf_pre_routing.cold (10,101,010 samples, 0.50%)</title><rect x="375.8" y="213" width="5.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="378.80" y="223.5" ></text>
</g>
<g >
<title>nf_hook_slow (40,404,040 samples, 2.00%)</title><rect x="381.7" y="165" width="23.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="384.70" y="175.5" >n..</text>
</g>
<g >
<title>nf_hook_slow (20,202,020 samples, 1.00%)</title><rect x="393.5" y="117" width="11.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="396.50" y="127.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (10,101,010 samples, 0.50%)</title><rect x="1048.4" y="565" width="5.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1051.40" y="575.5" ></text>
</g>
<g >
<title>__rdl_alloc (20,202,020 samples, 1.00%)</title><rect x="1131.0" y="533" width="11.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1134.00" y="543.5" ></text>
</g>
<g >
<title>pingora_core::protocols::http::server::Session::finish::_$u7b$$u7b$closure$u7d$$u7d$::h83c405b544cdafce (10,101,010 samples, 0.50%)</title><rect x="812.4" y="549" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="815.40" y="559.5" ></text>
</g>
<g >
<title>&lt;tokio::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (10,101,010 samples, 0.50%)</title><rect x="269.6" y="565" width="5.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="272.60" y="575.5" ></text>
</g>
<g >
<title>tcp_poll (10,101,010 samples, 0.50%)</title><rect x="1072.0" y="453" width="5.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1075.00" y="463.5" ></text>
</g>
<g >
<title>__do_softirq (262,626,260 samples, 13.00%)</title><rect x="364.0" y="261" width="153.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="367.00" y="271.5" >__do_softirq</text>
</g>
<g >
<title>[libc-2.31.so] (20,202,020 samples, 1.00%)</title><rect x="836.0" y="533" width="11.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="839.00" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;pingora_http::ResponseHeader&gt; (10,101,010 samples, 0.50%)</title><rect x="777.0" y="549" width="5.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="780.00" y="559.5" ></text>
</g>
<g >
<title>&lt;&amp;std::os::unix::net::stream::UnixStream as std::io::Read&gt;::read (90,909,090 samples, 4.50%)</title><rect x="299.1" y="533" width="53.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="302.10" y="543.5" >&lt;&amp;std..</text>
</g>
<g >
<title>do_el0_svc (353,535,350 samples, 17.50%)</title><rect x="15.9" y="469" width="206.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="18.90" y="479.5" >do_el0_svc</text>
</g>
<g >
<title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (10,101,010 samples, 0.50%)</title><rect x="883.2" y="533" width="5.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="886.20" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1,171,717,160 samples, 58.00%)</title><rect x="299.1" y="565" width="684.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="302.10" y="575.5" >[unknown]</text>
</g>
<g >
<title>__dev_queue_xmit (262,626,260 samples, 13.00%)</title><rect x="364.0" y="357" width="153.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="367.00" y="367.5" >__dev_queue_xmit</text>
</g>
<g >
<title>do_softirq_own_stack (262,626,260 samples, 13.00%)</title><rect x="364.0" y="309" width="153.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="367.00" y="319.5" >do_softirq_own_stack</text>
</g>
<g >
<title>br_forward (40,404,040 samples, 2.00%)</title><rect x="381.7" y="181" width="23.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="384.70" y="191.5" >b..</text>
</g>
<g >
<title>el0_svc (10,101,010 samples, 0.50%)</title><rect x="10.0" y="485" width="5.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (20,202,020 samples, 1.00%)</title><rect x="281.4" y="565" width="11.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="284.40" y="575.5" ></text>
</g>
<g >
<title>&lt;tokio::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (10,101,010 samples, 0.50%)</title><rect x="623.6" y="533" width="5.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="626.60" y="543.5" ></text>
</g>
<g >
<title>_ZN12pingora_core8services9listening16Service$LT$A$GT$12run_endpoint28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hb232457a5b6b64acE.llvm.1712944265698900751 (10,101,010 samples, 0.50%)</title><rect x="688.5" y="533" width="5.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="691.50" y="543.5" ></text>
</g>
<g >
<title>pingora_core::connectors::http::Connector::release_http_session::_$u7b$$u7b$closure$u7d$$u7d$::h1bef6f4cf01a735e (30,303,030 samples, 1.50%)</title><rect x="794.7" y="549" width="17.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="797.70" y="559.5" ></text>
</g>
<g >
<title>nf_hook_slow (20,202,020 samples, 1.00%)</title><rect x="352.2" y="357" width="11.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="355.20" y="367.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (232,323,230 samples, 11.50%)</title><rect x="63.1" y="341" width="135.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="66.10" y="351.5" >__local_bh_enable..</text>
</g>
<g >
<title>br_nf_post_routing (20,202,020 samples, 1.00%)</title><rect x="393.5" y="101" width="11.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="396.50" y="111.5" ></text>
</g>
<g >
<title>__aarch64_ldadd8_rel (10,101,010 samples, 0.50%)</title><rect x="1007.1" y="565" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1010.10" y="575.5" ></text>
</g>
<g >
<title>do_el0_svc (80,808,080 samples, 4.00%)</title><rect x="305.0" y="453" width="47.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="308.00" y="463.5" >do_e..</text>
</g>
<g >
<title>inet_getname (40,404,040 samples, 2.00%)</title><rect x="594.1" y="421" width="23.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="597.10" y="431.5" >i..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (10,101,010 samples, 0.50%)</title><rect x="936.3" y="533" width="5.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="939.30" y="543.5" ></text>
</g>
<g >
<title>tokio::sync::mpsc::chan::channel (10,101,010 samples, 0.50%)</title><rect x="977.6" y="533" width="5.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="980.60" y="543.5" ></text>
</g>
<g >
<title>nft_do_chain (10,101,010 samples, 0.50%)</title><rect x="375.8" y="165" width="5.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="378.80" y="175.5" ></text>
</g>
<g >
<title>pingora_http::RequestHeader::as_owned_parts (10,101,010 samples, 0.50%)</title><rect x="847.8" y="533" width="5.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="850.80" y="543.5" ></text>
</g>
<g >
<title>pingora_http::RequestHeader::as_owned_parts (10,101,010 samples, 0.50%)</title><rect x="847.8" y="549" width="5.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="850.80" y="559.5" ></text>
</g>
<g >
<title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (10,101,010 samples, 0.50%)</title><rect x="641.3" y="549" width="5.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="644.30" y="559.5" ></text>
</g>
<g >
<title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17hc8bd61969ea1da49E.llvm.16740919814931543581 (10,101,010 samples, 0.50%)</title><rect x="735.7" y="549" width="5.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="738.70" y="559.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="293.2" y="565" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="296.20" y="575.5" ></text>
</g>
<g >
<title>tokio::runtime::io::registration::Registration::poll_ready (20,202,020 samples, 1.00%)</title><rect x="942.2" y="549" width="11.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="945.20" y="559.5" ></text>
</g>
<g >
<title>el0_svc (353,535,350 samples, 17.50%)</title><rect x="15.9" y="485" width="206.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="18.90" y="495.5" >el0_svc</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (303,030,300 samples, 15.00%)</title><rect x="352.2" y="533" width="177.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="355.20" y="543.5" >&lt;&amp;std::net::tcp::TcpSt..</text>
</g>
<g >
<title>br_handle_frame (50,505,050 samples, 2.50%)</title><rect x="375.8" y="229" width="29.5" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="378.80" y="239.5" >br..</text>
</g>
<g >
<title>__dev_queue_xmit (131,313,130 samples, 6.50%)</title><rect x="86.7" y="181" width="76.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="89.70" y="191.5" >__dev_qu..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (10,101,010 samples, 0.50%)</title><rect x="954.0" y="549" width="5.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="957.00" y="559.5" ></text>
</g>
<g >
<title>tokio::sync::mpsc::bounded::channel (20,202,020 samples, 1.00%)</title><rect x="1131.0" y="565" width="11.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1134.00" y="575.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::try_with_capacity (10,101,010 samples, 0.50%)</title><rect x="788.8" y="549" width="5.9" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="791.80" y="559.5" ></text>
</g>
<g >
<title>el0_da (20,202,020 samples, 1.00%)</title><rect x="995.3" y="469" width="11.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="998.30" y="479.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (10,101,010 samples, 0.50%)</title><rect x="393.5" y="85" width="5.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="396.50" y="95.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (80,808,080 samples, 4.00%)</title><rect x="305.0" y="485" width="47.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="308.00" y="495.5" >el0t..</text>
</g>
<g >
<title>nf_conntrack_in (10,101,010 samples, 0.50%)</title><rect x="405.3" y="181" width="5.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="408.30" y="191.5" ></text>
</g>
<g >
<title>std::time::Instant::elapsed (10,101,010 samples, 0.50%)</title><rect x="1125.1" y="549" width="5.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1128.10" y="559.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (50,505,050 samples, 2.50%)</title><rect x="1060.2" y="517" width="29.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1063.20" y="527.5" >el..</text>
</g>
<g >
<title>nf_hook_slow (10,101,010 samples, 0.50%)</title><rect x="405.3" y="213" width="5.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="408.30" y="223.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (10,101,010 samples, 0.50%)</title><rect x="163.4" y="197" width="5.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="166.40" y="207.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (353,535,350 samples, 17.50%)</title><rect x="15.9" y="501" width="206.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="18.90" y="511.5" >el0t_64_sync_handler</text>
</g>
<g >
<title>ipv4_conntrack_local (10,101,010 samples, 0.50%)</title><rect x="511.5" y="101" width="5.9" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="514.50" y="111.5" ></text>
</g>
<g >
<title>__rdl_alloc (10,101,010 samples, 0.50%)</title><rect x="977.6" y="517" width="5.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="980.60" y="527.5" ></text>
</g>
<g >
<title>nf_hook_slow (171,717,170 samples, 8.50%)</title><rect x="63.1" y="245" width="100.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="66.10" y="255.5" >nf_hook_slow</text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="269.6" y="549" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="272.60" y="559.5" ></text>
</g>
<g >
<title>el1h_64_irq (10,101,010 samples, 0.50%)</title><rect x="334.5" y="357" width="5.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="337.50" y="367.5" ></text>
</g>
<g >
<title>http::header::map::hash_elem_using (10,101,010 samples, 0.50%)</title><rect x="712.1" y="533" width="5.9" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="715.10" y="543.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.50%)</title><rect x="251.9" y="549" width="5.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="254.90" y="559.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (30,303,030 samples, 1.50%)</title><rect x="959.9" y="549" width="17.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="962.90" y="559.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.50%)</title><rect x="1107.4" y="549" width="5.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1110.40" y="559.5" ></text>
</g>
<g >
<title>br_handle_frame (10,101,010 samples, 0.50%)</title><rect x="346.3" y="213" width="5.9" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="349.30" y="223.5" ></text>
</g>
<g >
<title>pingora_proxy::HttpProxy$LT$SV$GT$::finish::_$u7b$$u7b$closure$u7d$$u7d$::h0c901e122cb00ecd (10,101,010 samples, 0.50%)</title><rect x="871.4" y="549" width="5.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="874.40" y="559.5" ></text>
</g>
<g >
<title>sch_direct_xmit (121,212,120 samples, 6.00%)</title><rect x="92.6" y="165" width="70.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="95.60" y="175.5" >sch_dir..</text>
</g>
<g >
<title>pingora_core::protocols::http::v1::body::BodyWriter::finish::_$u7b$$u7b$closure$u7d$$u7d$::h4e99faab406d234e (10,101,010 samples, 0.50%)</title><rect x="1095.6" y="565" width="5.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1098.60" y="575.5" ></text>
</g>
<g >
<title>br_nf_forward (20,202,020 samples, 1.00%)</title><rect x="393.5" y="149" width="11.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="396.50" y="159.5" ></text>
</g>
<g >
<title>el0_da (10,101,010 samples, 0.50%)</title><rect x="1136.9" y="421" width="5.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1139.90" y="431.5" ></text>
</g>
<g >
<title>getpeername (40,404,040 samples, 2.00%)</title><rect x="594.1" y="533" width="23.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="597.10" y="543.5" >g..</text>
</g>
<g >
<title>__nf_ct_refresh_acct (10,101,010 samples, 0.50%)</title><rect x="511.5" y="69" width="5.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="514.50" y="79.5" ></text>
</g>
<g >
<title>____do_softirq (232,323,230 samples, 11.50%)</title><rect x="63.1" y="293" width="135.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="66.10" y="303.5" >____do_softirq</text>
</g>
<g >
<title>pingora_core::connectors::TransportConnector::release_stream (10,101,010 samples, 0.50%)</title><rect x="800.6" y="533" width="5.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="803.60" y="543.5" ></text>
</g>
<g >
<title>el0_svc (40,404,040 samples, 2.00%)</title><rect x="594.1" y="485" width="23.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="597.10" y="495.5" >e..</text>
</g>
<g >
<title>irq_exit_rcu (10,101,010 samples, 0.50%)</title><rect x="718.0" y="469" width="5.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="721.00" y="479.5" ></text>
</g>
<g >
<title>ip_rcv (171,717,170 samples, 8.50%)</title><rect x="411.2" y="229" width="100.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="414.20" y="239.5" >ip_rcv</text>
</g>
<g >
<title>nf_hook_slow (10,101,010 samples, 0.50%)</title><rect x="375.8" y="197" width="5.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="378.80" y="207.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 1.00%)</title><rect x="234.2" y="549" width="11.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="237.20" y="559.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (20,202,020 samples, 1.00%)</title><rect x="836.0" y="501" width="11.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="839.00" y="511.5" ></text>
</g>
<g >
<title>__secure_computing (10,101,010 samples, 0.50%)</title><rect x="523.3" y="421" width="5.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="526.30" y="431.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (10,101,010 samples, 0.50%)</title><rect x="1166.4" y="293" width="5.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1169.40" y="303.5" ></text>
</g>
<g >
<title>call_on_irq_stack (10,101,010 samples, 0.50%)</title><rect x="334.5" y="277" width="5.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="337.50" y="287.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::get (10,101,010 samples, 0.50%)</title><rect x="782.9" y="549" width="5.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="785.90" y="559.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (292,929,290 samples, 14.50%)</title><rect x="352.2" y="389" width="171.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="355.20" y="399.5" >__tcp_push_pending_fra..</text>
</g>
<g >
<title>nf_conntrack_tcp_packet (10,101,010 samples, 0.50%)</title><rect x="405.3" y="165" width="5.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="408.30" y="175.5" ></text>
</g>
<g >
<title>tcp_recvmsg (10,101,010 samples, 0.50%)</title><rect x="10.0" y="421" width="5.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (303,030,300 samples, 15.00%)</title><rect x="352.2" y="485" width="177.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="355.20" y="495.5" >el0t_64_sync_handler</text>
</g>
<g >
<title>pingora_proxy::HttpProxy$LT$SV$GT$::process_request::_$u7b$$u7b$closure$u7d$$u7d$::h47af2a7823afcef2 (10,101,010 samples, 0.50%)</title><rect x="1113.3" y="565" width="5.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1116.30" y="575.5" ></text>
</g>
<g >
<title>nf_conntrack_in (10,101,010 samples, 0.50%)</title><rect x="163.4" y="213" width="5.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="166.40" y="223.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (10,101,010 samples, 0.50%)</title><rect x="989.4" y="469" width="5.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="992.40" y="479.5" ></text>
</g>
<g >
<title>local_bh_enable (262,626,260 samples, 13.00%)</title><rect x="364.0" y="341" width="153.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="367.00" y="351.5" >local_bh_enable</text>
</g>
<g >
<title>el0t_64_sync (10,101,010 samples, 0.50%)</title><rect x="989.4" y="485" width="5.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="992.40" y="495.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (10,101,010 samples, 0.50%)</title><rect x="1136.9" y="437" width="5.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1139.90" y="447.5" ></text>
</g>
<g >
<title>_ZN76_$LT$pingora_server..LB$u20$as$u20$pingora_proxy..proxy_trait..ProxyHttp$GT$13upstream_peer28_$u7b$$u7b$closure$u7d$$u7d$17h8c758ebb1acbeddcE.llvm.6880983854631394884 (10,101,010 samples, 0.50%)</title><rect x="889.1" y="533" width="5.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="892.10" y="543.5" ></text>
</g>
<g >
<title>tcp_poll (20,202,020 samples, 1.00%)</title><rect x="1060.2" y="437" width="11.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1063.20" y="447.5" ></text>
</g>
<g >
<title>&lt;pingora_core::modules::http::compression::ResponseCompression as pingora_core::modules::http::HttpModule&gt;::response_header_filter (10,101,010 samples, 0.50%)</title><rect x="676.7" y="517" width="5.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="679.70" y="527.5" ></text>
</g>
<g >
<title>el0t_64_sync (10,101,010 samples, 0.50%)</title><rect x="1101.5" y="517" width="5.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1104.50" y="527.5" ></text>
</g>
<g >
<title>br_forward_finish.cold (20,202,020 samples, 1.00%)</title><rect x="393.5" y="133" width="11.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="396.50" y="143.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (232,323,230 samples, 11.50%)</title><rect x="63.1" y="325" width="135.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="66.10" y="335.5" >do_softirq_own_st..</text>
</g>
<g >
<title>std::sys::pal::unix::time::Timespec::now (20,202,020 samples, 1.00%)</title><rect x="257.8" y="533" width="11.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="260.80" y="543.5" ></text>
</g>
<g >
<title>posix_memalign (10,101,010 samples, 0.50%)</title><rect x="977.6" y="501" width="5.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="980.60" y="511.5" ></text>
</g>
<g >
<title>net_rx_action (60,606,060 samples, 3.00%)</title><rect x="163.4" y="261" width="35.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="166.40" y="271.5" >net..</text>
</g>
<g >
<title>std::thread::sleep (60,606,060 samples, 3.00%)</title><rect x="1154.6" y="549" width="35.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1157.60" y="559.5" >std..</text>
</g>
<g >
<title>el1h_64_irq_handler (10,101,010 samples, 0.50%)</title><rect x="1166.4" y="341" width="5.9" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1169.40" y="351.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (40,404,040 samples, 2.00%)</title><rect x="381.7" y="213" width="23.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="384.70" y="223.5" >b..</text>
</g>
<g >
<title>____do_softirq (10,101,010 samples, 0.50%)</title><rect x="1166.4" y="261" width="5.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1169.40" y="271.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (10,101,010 samples, 0.50%)</title><rect x="718.0" y="517" width="5.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="721.00" y="527.5" ></text>
</g>
<g >
<title>nf_ct_bridge_pre (10,101,010 samples, 0.50%)</title><rect x="163.4" y="229" width="5.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="166.40" y="239.5" ></text>
</g>
<g >
<title>do_el0_svc (40,404,040 samples, 2.00%)</title><rect x="594.1" y="469" width="23.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="597.10" y="479.5" >d..</text>
</g>
<g >
<title>pingora_core::protocols::Ssl::selected_alpn_proto (10,101,010 samples, 0.50%)</title><rect x="729.8" y="533" width="5.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="732.80" y="543.5" ></text>
</g>
<g >
<title>__run_timer_base (10,101,010 samples, 0.50%)</title><rect x="511.5" y="229" width="5.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="514.50" y="239.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (20,202,020 samples, 1.00%)</title><rect x="1131.0" y="469" width="11.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1134.00" y="479.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.50%)</title><rect x="788.8" y="533" width="5.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="791.80" y="543.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (353,535,350 samples, 17.50%)</title><rect x="15.9" y="549" width="206.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="18.90" y="559.5" >&lt;&amp;std::net::tcp::TcpStream ..</text>
</g>
<g >
<title>tcp_rcv_established (10,101,010 samples, 0.50%)</title><rect x="187.0" y="213" width="5.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="190.00" y="223.5" ></text>
</g>
<g >
<title>vm_notify (90,909,090 samples, 4.50%)</title><rect x="110.3" y="117" width="53.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="113.30" y="127.5" >vm_no..</text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="1101.5" y="533" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1104.50" y="543.5" ></text>
</g>
<g >
<title>br_handle_frame (10,101,010 samples, 0.50%)</title><rect x="163.4" y="245" width="5.9" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="166.40" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,101,010 samples, 0.50%)</title><rect x="529.2" y="549" width="5.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="532.20" y="559.5" ></text>
</g>
<g >
<title>run_timer_softirq (10,101,010 samples, 0.50%)</title><rect x="334.5" y="229" width="5.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="337.50" y="239.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="1154.6" y="501" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1157.60" y="511.5" ></text>
</g>
<g >
<title>net_rx_action (232,323,230 samples, 11.50%)</title><rect x="375.8" y="245" width="135.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="378.80" y="255.5" >net_rx_action</text>
</g>
<g >
<title>____do_softirq (262,626,260 samples, 13.00%)</title><rect x="364.0" y="277" width="153.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="367.00" y="287.5" >____do_softirq</text>
</g>
<g >
<title>do_softirq_own_stack (10,101,010 samples, 0.50%)</title><rect x="334.5" y="293" width="5.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="337.50" y="303.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (10,101,010 samples, 0.50%)</title><rect x="706.2" y="533" width="5.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="709.20" y="543.5" ></text>
</g>
<g >
<title>____do_softirq (10,101,010 samples, 0.50%)</title><rect x="346.3" y="261" width="5.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="349.30" y="271.5" ></text>
</g>
<g >
<title>__arm64_sys_mprotect (10,101,010 samples, 0.50%)</title><rect x="989.4" y="421" width="5.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="992.40" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (20,202,020 samples, 1.00%)</title><rect x="1131.0" y="485" width="11.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1134.00" y="495.5" ></text>
</g>
<g >
<title>ip_rcv.cold (10,101,010 samples, 0.50%)</title><rect x="405.3" y="229" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="408.30" y="239.5" ></text>
</g>
<g >
<title>vma_modify_flags (10,101,010 samples, 0.50%)</title><rect x="989.4" y="405" width="5.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="992.40" y="415.5" ></text>
</g>
<g >
<title>tcp_send_ack (20,202,020 samples, 1.00%)</title><rect x="340.4" y="389" width="11.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="343.40" y="399.5" ></text>
</g>
<g >
<title>nf_hook_slow (50,505,050 samples, 2.50%)</title><rect x="27.7" y="373" width="29.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="30.70" y="383.5" >nf..</text>
</g>
<g >
<title>_ZN5bytes5bytes11static_drop17hc18af662bbe551fdE.llvm.10447861677620357696 (10,101,010 samples, 0.50%)</title><rect x="771.1" y="533" width="5.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="774.10" y="543.5" ></text>
</g>
<g >
<title>tokio::runtime::io::registration::Registration::poll_ready (10,101,010 samples, 0.50%)</title><rect x="806.5" y="517" width="5.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="809.50" y="527.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="853.7" y="533" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="856.70" y="543.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (10,101,010 samples, 0.50%)</title><rect x="405.3" y="197" width="5.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="408.30" y="207.5" ></text>
</g>
<g >
<title>pingora_core::protocols::http::v1::server::HttpSession::write_response_header::_$u7b$$u7b$closure$u7d$$u7d$::h2e249117c2b2bbf5 (10,101,010 samples, 0.50%)</title><rect x="1101.5" y="565" width="5.9" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1104.50" y="575.5" ></text>
</g>
<g >
<title>all (2,020,202,000 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>__arm64_sys_getpeername (40,404,040 samples, 2.00%)</title><rect x="594.1" y="453" width="23.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="597.10" y="463.5" >_..</text>
</g>
<g >
<title>__el0_irq_handler_common (10,101,010 samples, 0.50%)</title><rect x="718.0" y="501" width="5.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="721.00" y="511.5" ></text>
</g>
<g >
<title>pingora_http::RequestHeader::build (10,101,010 samples, 0.50%)</title><rect x="859.6" y="533" width="5.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="862.60" y="543.5" ></text>
</g>
<g >
<title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (10,101,010 samples, 0.50%)</title><rect x="1125.1" y="565" width="5.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1128.10" y="575.5" ></text>
</g>
<g >
<title>tcp_current_mss (10,101,010 samples, 0.50%)</title><rect x="216.5" y="405" width="5.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="219.50" y="415.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::get_all (10,101,010 samples, 0.50%)</title><rect x="1030.7" y="565" width="5.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1033.70" y="575.5" ></text>
</g>
<g >
<title>local_bh_enable (10,101,010 samples, 0.50%)</title><rect x="346.3" y="325" width="5.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="349.30" y="335.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (262,626,260 samples, 13.00%)</title><rect x="57.2" y="373" width="153.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="60.20" y="383.5" >__dev_queue_xmit</text>
</g>
<g >
<title>_ZN13pingora_proxy11proxy_trait9ProxyHttp21proxy_upstream_filter28_$u7b$$u7b$closure$u7d$$u7d$17h0f570dd308451b00E.llvm.6880983854631394884 (10,101,010 samples, 0.50%)</title><rect x="718.0" y="549" width="5.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="721.00" y="559.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (30,303,030 samples, 1.50%)</title><rect x="989.4" y="517" width="17.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="992.40" y="527.5" ></text>
</g>
<g >
<title>_ZN12pingora_core8services9listening16Service$LT$A$GT$12run_endpoint28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hb232457a5b6b64acE.llvm.1712944265698900751 (40,404,040 samples, 2.00%)</title><rect x="682.6" y="549" width="23.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="685.60" y="559.5" >_..</text>
</g>
<g >
<title>ip_rcv.cold (10,101,010 samples, 0.50%)</title><rect x="169.3" y="245" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="172.30" y="255.5" ></text>
</g>
<g >
<title>veth_xmit (10,101,010 samples, 0.50%)</title><rect x="393.5" y="53" width="5.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="396.50" y="63.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (40,404,040 samples, 2.00%)</title><rect x="1160.5" y="485" width="23.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1163.50" y="495.5" >e..</text>
</g>
<g >
<title>__arm64_sys_recvfrom (10,101,010 samples, 0.50%)</title><rect x="10.0" y="453" width="5.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>el0_svc (10,101,010 samples, 0.50%)</title><rect x="989.4" y="453" width="5.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="992.40" y="463.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (10,101,010 samples, 0.50%)</title><rect x="393.5" y="69" width="5.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="396.50" y="79.5" ></text>
</g>
<g >
<title>nft_bitmap_lookup (10,101,010 samples, 0.50%)</title><rect x="381.7" y="85" width="5.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="384.70" y="95.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (10,101,010 samples, 0.50%)</title><rect x="10.0" y="501" width="5.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (10,101,010 samples, 0.50%)</title><rect x="1136.9" y="373" width="5.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1139.90" y="383.5" ></text>
</g>
<g >
<title>Pingora_HTTP_Pr (1,939,393,920 samples, 96.00%)</title><rect x="10.0" y="581" width="1132.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >Pingora_HTTP_Pr</text>
</g>
<g >
<title>__nanosleep (50,505,050 samples, 2.50%)</title><rect x="1154.6" y="533" width="29.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1157.60" y="543.5" >__..</text>
</g>
<g >
<title>tokio::runtime::io::registration::Registration::poll_ready (10,101,010 samples, 0.50%)</title><rect x="912.7" y="533" width="5.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="915.70" y="543.5" ></text>
</g>
<g >
<title>nf_hook_slow (10,101,010 samples, 0.50%)</title><rect x="399.4" y="85" width="5.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="402.40" y="95.5" ></text>
</g>
<g >
<title>inet_recvmsg (80,808,080 samples, 4.00%)</title><rect x="305.0" y="421" width="47.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="308.00" y="431.5" >inet..</text>
</g>
<g >
<title>__siphash_unaligned (20,202,020 samples, 1.00%)</title><rect x="33.6" y="341" width="11.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="36.60" y="351.5" ></text>
</g>
<g >
<title>_ZN12pingora_core8services9listening16Service$LT$A$GT$12run_endpoint28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hb232457a5b6b64acE.llvm.1712944265698900751 (10,101,010 samples, 0.50%)</title><rect x="983.5" y="565" width="5.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="986.50" y="575.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="723.9" y="533" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="726.90" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (10,101,010 samples, 0.50%)</title><rect x="771.1" y="549" width="5.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="774.10" y="559.5" ></text>
</g>
<g >
<title>nf_hook_slow (10,101,010 samples, 0.50%)</title><rect x="511.5" y="117" width="5.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="514.50" y="127.5" ></text>
</g>
<g >
<title>net_rx_action.cold (171,717,170 samples, 8.50%)</title><rect x="63.1" y="261" width="100.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="66.10" y="271.5" >net_rx_actio..</text>
</g>
<g >
<title>br_handle_frame_finish (40,404,040 samples, 2.00%)</title><rect x="381.7" y="197" width="23.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="384.70" y="207.5" >b..</text>
</g>
<g >
<title>do_el0_svc (303,030,300 samples, 15.00%)</title><rect x="352.2" y="453" width="177.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="355.20" y="463.5" >do_el0_svc</text>
</g>
<g >
<title>pingora_http::ResponseHeader::build (10,101,010 samples, 0.50%)</title><rect x="588.2" y="533" width="5.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="591.20" y="543.5" ></text>
</g>
<g >
<title>inet_recvmsg (10,101,010 samples, 0.50%)</title><rect x="10.0" y="437" width="5.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>do_el0_svc (10,101,010 samples, 0.50%)</title><rect x="10.0" y="469" width="5.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>el0_svc (30,303,030 samples, 1.50%)</title><rect x="1160.5" y="469" width="17.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1163.50" y="479.5" ></text>
</g>
<g >
<title>__sys_getpeername (40,404,040 samples, 2.00%)</title><rect x="594.1" y="437" width="23.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="597.10" y="447.5" >_..</text>
</g>
<g >
<title>[libc-2.31.so] (20,202,020 samples, 1.00%)</title><rect x="1131.0" y="501" width="11.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1134.00" y="511.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (10,101,010 samples, 0.50%)</title><rect x="346.3" y="293" width="5.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="349.30" y="303.5" ></text>
</g>
<g >
<title>el0t_64_sync (303,030,300 samples, 15.00%)</title><rect x="352.2" y="501" width="177.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="355.20" y="511.5" >el0t_64_sync</text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="246.0" y="549" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="249.00" y="559.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (10,101,010 samples, 0.50%)</title><rect x="718.0" y="453" width="5.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="721.00" y="463.5" ></text>
</g>
<g >
<title>__folio_throttle_swaprate (10,101,010 samples, 0.50%)</title><rect x="1001.2" y="421" width="5.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1004.20" y="431.5" ></text>
</g>
<g >
<title>epoll_pwait (50,505,050 samples, 2.50%)</title><rect x="1060.2" y="549" width="29.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1063.20" y="559.5" >ep..</text>
</g>
<g >
<title>__do_softirq (232,323,230 samples, 11.50%)</title><rect x="63.1" y="277" width="135.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="66.10" y="287.5" >__do_softirq</text>
</g>
<g >
<title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (10,101,010 samples, 0.50%)</title><rect x="936.3" y="549" width="5.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="939.30" y="559.5" ></text>
</g>
<g >
<title>do_mem_abort (10,101,010 samples, 0.50%)</title><rect x="1101.5" y="469" width="5.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1104.50" y="479.5" ></text>
</g>
<g >
<title>_ZN51_$LT$T$u20$as$u20$pingora_core..apps..ServerApp$GT$11process_new28_$u7b$$u7b$closure$u7d$$u7d$17h4a7b225265c4cb4aE.llvm.3767134860383121450 (20,202,020 samples, 1.00%)</title><rect x="694.4" y="533" width="11.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="697.40" y="543.5" ></text>
</g>
<g >
<title>____do_softirq (10,101,010 samples, 0.50%)</title><rect x="718.0" y="421" width="5.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="721.00" y="431.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (20,202,020 samples, 1.00%)</title><rect x="181.1" y="229" width="11.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="184.10" y="239.5" ></text>
</g>
<g >
<title>clock_gettime (10,101,010 samples, 0.50%)</title><rect x="1125.1" y="517" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1128.10" y="527.5" ></text>
</g>
<g >
<title>local_daif_restore (10,101,010 samples, 0.50%)</title><rect x="841.9" y="485" width="5.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="844.90" y="495.5" ></text>
</g>
<g >
<title>arch_counter_get_cntvct (20,202,020 samples, 1.00%)</title><rect x="417.1" y="197" width="11.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="420.10" y="207.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (10,101,010 samples, 0.50%)</title><rect x="175.2" y="229" width="5.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="178.20" y="239.5" ></text>
</g>
<g >
<title>el0t_64_sync (20,202,020 samples, 1.00%)</title><rect x="836.0" y="517" width="11.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="839.00" y="527.5" ></text>
</g>
<g >
<title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (10,101,010 samples, 0.50%)</title><rect x="617.7" y="533" width="5.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="620.70" y="543.5" ></text>
</g>
<g >
<title>do_mem_abort (10,101,010 samples, 0.50%)</title><rect x="1136.9" y="405" width="5.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1139.90" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="983.5" y="533" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="986.50" y="543.5" ></text>
</g>
<g >
<title>handle_mm_fault (10,101,010 samples, 0.50%)</title><rect x="1136.9" y="389" width="5.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1139.90" y="399.5" ></text>
</g>
<g >
<title>nft_do_chain_inet (10,101,010 samples, 0.50%)</title><rect x="375.8" y="181" width="5.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="378.80" y="191.5" ></text>
</g>
<g >
<title>pingora_proxy::Session::write_response_tasks::_$u7b$$u7b$closure$u7d$$u7d$::hbbfcd7b26d59ad8e (10,101,010 samples, 0.50%)</title><rect x="664.9" y="517" width="5.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="667.90" y="527.5" ></text>
</g>
<g >
<title>flow_offload_lookup (10,101,010 samples, 0.50%)</title><rect x="80.8" y="197" width="5.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="83.80" y="207.5" ></text>
</g>
<g >
<title>nft_do_chain (20,202,020 samples, 1.00%)</title><rect x="381.7" y="101" width="11.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="384.70" y="111.5" ></text>
</g>
<g >
<title>_ZN88_$LT$pingora_proxy..HttpProxy$LT$SV$GT$$u20$as$u20$pingora_core..apps..HttpServerApp$GT$16process_new_http28_$u7b$$u7b$closure$u7d$$u7d$17hfaba557515d4857aE.llvm.3767134860383121450 (10,101,010 samples, 0.50%)</title><rect x="753.4" y="549" width="5.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="756.40" y="559.5" ></text>
</g>
<g >
<title>el1h_64_irq_handler (10,101,010 samples, 0.50%)</title><rect x="334.5" y="341" width="5.9" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="337.50" y="351.5" ></text>
</g>
<g >
<title>&lt;pingora_core::protocols::l4::stream::RawStreamWrapper as tokio::io::async_read::AsyncRead&gt;::poll_read (10,101,010 samples, 0.50%)</title><rect x="635.4" y="533" width="5.9" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="638.40" y="543.5" ></text>
</g>
<g >
<title>eth_header (10,101,010 samples, 0.50%)</title><rect x="74.9" y="197" width="5.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="77.90" y="207.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;http::header::map::HeaderMap&lt;pingora_http::case_header_name::CaseHeaderName&gt;&gt;&gt; (20,202,020 samples, 1.00%)</title><rect x="759.3" y="549" width="11.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="762.30" y="559.5" ></text>
</g>
<g >
<title>ip_queue_xmit (10,101,010 samples, 0.50%)</title><rect x="21.8" y="389" width="5.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="24.80" y="399.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (10,101,010 samples, 0.50%)</title><rect x="954.0" y="533" width="5.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="957.00" y="543.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (10,101,010 samples, 0.50%)</title><rect x="511.5" y="149" width="5.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="514.50" y="159.5" ></text>
</g>
<g >
<title>__do_softirq (10,101,010 samples, 0.50%)</title><rect x="346.3" y="245" width="5.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="349.30" y="255.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (50,505,050 samples, 2.50%)</title><rect x="310.9" y="373" width="29.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="313.90" y="383.5" >__..</text>
</g>
<g >
<title>start_xmit (111,111,110 samples, 5.50%)</title><rect x="98.5" y="133" width="64.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="101.50" y="143.5" >start_x..</text>
</g>
<g >
<title>el0_da (10,101,010 samples, 0.50%)</title><rect x="836.0" y="485" width="5.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="839.00" y="495.5" ></text>
</g>
<g >
<title>__arm64_sys_clock_nanosleep (30,303,030 samples, 1.50%)</title><rect x="1160.5" y="437" width="17.7" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1163.50" y="447.5" ></text>
</g>
<g >
<title>__run_timer_base (10,101,010 samples, 0.50%)</title><rect x="334.5" y="213" width="5.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="337.50" y="223.5" ></text>
</g>
<g >
<title>ip_rcv (30,303,030 samples, 1.50%)</title><rect x="175.2" y="245" width="17.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="178.20" y="255.5" ></text>
</g>
<g >
<title>__pi_clear_page (10,101,010 samples, 0.50%)</title><rect x="995.3" y="437" width="5.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="998.30" y="447.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (10,101,010 samples, 0.50%)</title><rect x="305.0" y="389" width="5.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="308.00" y="399.5" ></text>
</g>
<g >
<title>&lt;pingora_core::protocols::l4::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (20,202,020 samples, 1.00%)</title><rect x="257.8" y="565" width="11.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="260.80" y="575.5" ></text>
</g>
<g >
<title>tcp_write_timer (10,101,010 samples, 0.50%)</title><rect x="334.5" y="197" width="5.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="337.50" y="207.5" ></text>
</g>
<g >
<title>ip_queue_xmit.cold (50,505,050 samples, 2.50%)</title><rect x="27.7" y="389" width="29.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="30.70" y="399.5" >ip..</text>
</g>
<g >
<title>ip_queue_xmit.cold (20,202,020 samples, 1.00%)</title><rect x="352.2" y="373" width="11.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="355.20" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;http::header::map::HeaderMap&lt;pingora_http::case_header_name::CaseHeaderName&gt;&gt;&gt; (10,101,010 samples, 0.50%)</title><rect x="777.0" y="533" width="5.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="780.00" y="543.5" ></text>
</g>
<g >
<title>std::thread::sleep (10,101,010 samples, 0.50%)</title><rect x="1184.1" y="533" width="5.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1187.10" y="543.5" ></text>
</g>
<g >
<title>http::header::map::hash_elem_using (10,101,010 samples, 0.50%)</title><rect x="782.9" y="533" width="5.9" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="785.90" y="543.5" ></text>
</g>
<g >
<title>_copy_to_iter (10,101,010 samples, 0.50%)</title><rect x="328.6" y="357" width="5.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="331.60" y="367.5" ></text>
</g>
<g >
<title>net_rx_action.cold (10,101,010 samples, 0.50%)</title><rect x="369.9" y="245" width="5.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="372.90" y="255.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="812.4" y="533" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="815.40" y="543.5" ></text>
</g>
<g >
<title>el0t_64_sync (10,101,010 samples, 0.50%)</title><rect x="10.0" y="517" width="5.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (20,202,020 samples, 1.00%)</title><rect x="995.3" y="485" width="11.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="998.30" y="495.5" ></text>
</g>
<g >
<title>el0t_64_sync (40,404,040 samples, 2.00%)</title><rect x="594.1" y="517" width="23.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="597.10" y="527.5" >e..</text>
</g>
<g >
<title>__arch_copy_to_user (30,303,030 samples, 1.50%)</title><rect x="310.9" y="357" width="17.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="313.90" y="367.5" ></text>
</g>
<g >
<title>tcp_delack_timer (10,101,010 samples, 0.50%)</title><rect x="511.5" y="197" width="5.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="514.50" y="207.5" ></text>
</g>
<g >
<title>el0t_64_sync (20,202,020 samples, 1.00%)</title><rect x="995.3" y="501" width="11.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="998.30" y="511.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (10,101,010 samples, 0.50%)</title><rect x="1101.5" y="501" width="5.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1104.50" y="511.5" ></text>
</g>
<g >
<title>ip_queue_xmit (262,626,260 samples, 13.00%)</title><rect x="57.2" y="389" width="153.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="60.20" y="399.5" >ip_queue_xmit</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.50%)</title><rect x="1113.3" y="549" width="5.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1116.30" y="559.5" ></text>
</g>
<g >
<title>_ZN103_$LT$pingora_core..services..listening..Service$LT$A$GT$$u20$as$u20$pingora_core..services..Service$GT$13start_service28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h2f5a2787c0ed2e5aE.llvm.1712944265698900751 (20,202,020 samples, 1.00%)</title><rect x="959.9" y="533" width="11.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="962.90" y="543.5" ></text>
</g>
<g >
<title>el0_interrupt (10,101,010 samples, 0.50%)</title><rect x="718.0" y="485" width="5.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="721.00" y="495.5" ></text>
</g>
<g >
<title>_ZN12pingora_http19append_header_value17hc8cc13967ec50c06E.llvm.12067302657250453546 (10,101,010 samples, 0.50%)</title><rect x="564.6" y="533" width="5.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="567.60" y="543.5" ></text>
</g>
<g >
<title>_ZN5tokio7runtime4time6Driver13park_internal17h087fed728fc95ccaE.llvm.3365831258362887216 (20,202,020 samples, 1.00%)</title><rect x="741.6" y="549" width="11.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="744.60" y="559.5" ></text>
</g>
<g >
<title>_ZN5tokio7runtime6signal6Driver7process17h785b992be0068300E.llvm.13251981720371066912 (10,101,010 samples, 0.50%)</title><rect x="747.5" y="533" width="5.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="750.50" y="543.5" ></text>
</g>
<g >
<title>pingora_proxy::HttpProxy$LT$SV$GT$::proxy_to_upstream::_$u7b$$u7b$closure$u7d$$u7d$::hd690f19caa70aa61 (50,505,050 samples, 2.50%)</title><rect x="883.2" y="549" width="29.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="886.20" y="559.5" >pi..</text>
</g>
<g >
<title>el0t_64_sync_handler (40,404,040 samples, 2.00%)</title><rect x="594.1" y="501" width="23.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="597.10" y="511.5" >e..</text>
</g>
<g >
<title>_ZN12pingora_http19append_header_value17hc8cc13967ec50c06E.llvm.12067302657250453546 (20,202,020 samples, 1.00%)</title><rect x="706.2" y="549" width="11.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="709.20" y="559.5" ></text>
</g>
<g >
<title>pingora_timeout::timer::TimerManager::clock_thread (80,808,080 samples, 4.00%)</title><rect x="1142.8" y="565" width="47.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1145.80" y="575.5" >ping..</text>
</g>
<g >
<title>hrtimer_nanosleep (30,303,030 samples, 1.50%)</title><rect x="1160.5" y="405" width="17.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1163.50" y="415.5" ></text>
</g>
<g >
<title>bpf_prog_6af64676006bcfe5_lfwd_getpeername4 (30,303,030 samples, 1.50%)</title><rect x="600.0" y="405" width="17.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="603.00" y="415.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,101,010 samples, 0.50%)</title><rect x="334.5" y="309" width="5.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="337.50" y="319.5" ></text>
</g>
<g >
<title>sched_balance_softirq (10,101,010 samples, 0.50%)</title><rect x="1166.4" y="229" width="5.9" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1169.40" y="239.5" ></text>
</g>
<g >
<title>____do_softirq (10,101,010 samples, 0.50%)</title><rect x="334.5" y="261" width="5.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="337.50" y="271.5" ></text>
</g>
<g >
<title>schedule (10,101,010 samples, 0.50%)</title><rect x="1172.3" y="389" width="5.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1175.30" y="399.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (50,505,050 samples, 2.50%)</title><rect x="310.9" y="389" width="29.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="313.90" y="399.5" >sk..</text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 1.50%)</title><rect x="664.9" y="549" width="17.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="667.90" y="559.5" ></text>
</g>
<g >
<title>&lt;core::net::socket_addr::SocketAddr as pingora_core::protocols::ConnFdReusable&gt;::check_fd_match (40,404,040 samples, 2.00%)</title><rect x="594.1" y="549" width="23.6" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="597.10" y="559.5" >&lt;..</text>
</g>
<g >
<title>irq_exit_rcu (10,101,010 samples, 0.50%)</title><rect x="1166.4" y="309" width="5.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1169.40" y="319.5" ></text>
</g>
<g >
<title>local_bh_enable (232,323,230 samples, 11.50%)</title><rect x="63.1" y="357" width="135.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="66.10" y="367.5" >local_bh_enable</text>
</g>
<g >
<title>dev_hard_start_xmit (111,111,110 samples, 5.50%)</title><rect x="98.5" y="149" width="64.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="101.50" y="159.5" >dev_har..</text>
</g>
<g >
<title>httparse::Request::parse (10,101,010 samples, 0.50%)</title><rect x="570.5" y="533" width="5.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="573.50" y="543.5" ></text>
</g>
<g >
<title>el0t_64_irq (10,101,010 samples, 0.50%)</title><rect x="718.0" y="533" width="5.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="721.00" y="543.5" ></text>
</g>
<g >
<title>ipv4_dst_check (10,101,010 samples, 0.50%)</title><rect x="411.2" y="213" width="5.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="414.20" y="223.5" ></text>
</g>
<g >
<title>skb_clone (10,101,010 samples, 0.50%)</title><rect x="517.4" y="373" width="5.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="520.40" y="383.5" ></text>
</g>
<g >
<title>nf_flow_offload_ip_hook (161,616,160 samples, 8.00%)</title><rect x="69.0" y="213" width="94.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="72.00" y="223.5" >nf_flow_off..</text>
</g>
<g >
<title>tcp_send_ack (10,101,010 samples, 0.50%)</title><rect x="511.5" y="165" width="5.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="514.50" y="175.5" ></text>
</g>
<g >
<title>nf_conntrack_in (20,202,020 samples, 1.00%)</title><rect x="45.4" y="341" width="11.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="48.40" y="351.5" ></text>
</g>
<g >
<title>ip_queue_xmit.cold (10,101,010 samples, 0.50%)</title><rect x="511.5" y="133" width="5.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="514.50" y="143.5" ></text>
</g>
<g >
<title>vma_merge_existing_range (10,101,010 samples, 0.50%)</title><rect x="989.4" y="389" width="5.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="992.40" y="399.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (20,202,020 samples, 1.00%)</title><rect x="340.4" y="373" width="11.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="343.40" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40,404,040 samples, 2.00%)</title><rect x="222.4" y="565" width="23.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="225.40" y="575.5" >&lt;..</text>
</g>
<g >
<title>do_el0_svc (10,101,010 samples, 0.50%)</title><rect x="989.4" y="437" width="5.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="992.40" y="447.5" ></text>
</g>
<g >
<title>call_on_irq_stack (10,101,010 samples, 0.50%)</title><rect x="718.0" y="437" width="5.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="721.00" y="447.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="977.6" y="469" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="980.60" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;http::header::map::HeaderMap&lt;pingora_http::case_header_name::CaseHeaderName&gt;&gt;&gt; (10,101,010 samples, 0.50%)</title><rect x="865.5" y="533" width="5.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="868.50" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;pingora_core::protocols::digest::Digest&gt; (10,101,010 samples, 0.50%)</title><rect x="794.7" y="533" width="5.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="797.70" y="543.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (30,303,030 samples, 1.50%)</title><rect x="989.4" y="533" width="17.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="992.40" y="543.5" ></text>
</g>
<g >
<title>__seccomp_filter (10,101,010 samples, 0.50%)</title><rect x="523.3" y="405" width="5.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="526.30" y="415.5" ></text>
</g>
<g >
<title>el1_interrupt (10,101,010 samples, 0.50%)</title><rect x="334.5" y="325" width="5.9" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="337.50" y="335.5" ></text>
</g>
<g >
<title>tokio::net::tcp::stream::TcpStream::poll_read_priv (10,101,010 samples, 0.50%)</title><rect x="912.7" y="549" width="5.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="915.70" y="559.5" ></text>
</g>
<g >
<title>__kernel_clock_gettime (10,101,010 samples, 0.50%)</title><rect x="1125.1" y="501" width="5.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1128.10" y="511.5" ></text>
</g>
<g >
<title>arch_counter_get_cntvct (10,101,010 samples, 0.50%)</title><rect x="175.2" y="213" width="5.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="178.20" y="223.5" ></text>
</g>
<g >
<title>pingora_http::RequestHeader::build (20,202,020 samples, 1.00%)</title><rect x="576.4" y="533" width="11.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="579.40" y="543.5" ></text>
</g>
<g >
<title>pingora_proxy::HttpProxy$LT$SV$GT$::proxy_to_upstream::_$u7b$$u7b$closure$u7d$$u7d$::hd690f19caa70aa61 (30,303,030 samples, 1.50%)</title><rect x="895.0" y="533" width="17.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="898.00" y="543.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 1.50%)</title><rect x="989.4" y="549" width="17.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="992.40" y="559.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::try_append2 (20,202,020 samples, 1.00%)</title><rect x="1036.6" y="565" width="11.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1039.60" y="575.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="788.8" y="517" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="791.80" y="527.5" ></text>
</g>
<g >
<title>do_el0_svc (50,505,050 samples, 2.50%)</title><rect x="1060.2" y="485" width="29.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1063.20" y="495.5" >do..</text>
</g>
<g >
<title>ipv4_conntrack_local (20,202,020 samples, 1.00%)</title><rect x="352.2" y="341" width="11.8" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="355.20" y="351.5" ></text>
</g>
<g >
<title>nf_conntrack_in (10,101,010 samples, 0.50%)</title><rect x="511.5" y="85" width="5.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="514.50" y="95.5" ></text>
</g>
<g >
<title>do_el0_svc (30,303,030 samples, 1.50%)</title><rect x="1160.5" y="453" width="17.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1163.50" y="463.5" ></text>
</g>
<g >
<title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (30,303,030 samples, 1.50%)</title><rect x="918.6" y="549" width="17.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="921.60" y="559.5" ></text>
</g>
<g >
<title>nf_flow_offload_inet_hook (171,717,170 samples, 8.50%)</title><rect x="63.1" y="229" width="100.3" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="66.10" y="239.5" >nf_flow_offl..</text>
</g>
<g >
<title>recv (90,909,090 samples, 4.50%)</title><rect x="299.1" y="517" width="53.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="302.10" y="527.5" >recv</text>
</g>
<g >
<title>__siphash_unaligned (10,101,010 samples, 0.50%)</title><rect x="352.2" y="325" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="355.20" y="335.5" ></text>
</g>
<g >
<title>send (353,535,350 samples, 17.50%)</title><rect x="15.9" y="533" width="206.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="18.90" y="543.5" >send</text>
</g>
<g >
<title>do_mem_abort (20,202,020 samples, 1.00%)</title><rect x="995.3" y="453" width="11.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="998.30" y="463.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (292,929,290 samples, 14.50%)</title><rect x="352.2" y="437" width="171.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="355.20" y="447.5" >__arm64_sys_sendto</text>
</g>
<g >
<title>call_on_irq_stack (10,101,010 samples, 0.50%)</title><rect x="346.3" y="277" width="5.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="349.30" y="287.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (10,101,010 samples, 0.50%)</title><rect x="10.0" y="405" width="5.9" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>schedule (20,202,020 samples, 1.00%)</title><rect x="1160.5" y="373" width="11.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1163.50" y="383.5" ></text>
</g>
<g >
<title>__pi_clear_page (10,101,010 samples, 0.50%)</title><rect x="1136.9" y="357" width="5.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1139.90" y="367.5" ></text>
</g>
<g >
<title>posix_memalign (20,202,020 samples, 1.00%)</title><rect x="1131.0" y="517" width="11.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1134.00" y="527.5" ></text>
</g>
<g >
<title>pow (10,101,010 samples, 0.50%)</title><rect x="918.6" y="533" width="5.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="921.60" y="543.5" ></text>
</g>
<g >
<title>pingora_proxy::HttpProxy$LT$SV$GT$::process_request::_$u7b$$u7b$closure$u7d$$u7d$::h47af2a7823afcef2 (10,101,010 samples, 0.50%)</title><rect x="877.3" y="549" width="5.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="880.30" y="559.5" ></text>
</g>
<g >
<title>_ZN51_$LT$T$u20$as$u20$pingora_core..apps..ServerApp$GT$11process_new28_$u7b$$u7b$closure$u7d$$u7d$17h4a7b225265c4cb4aE.llvm.3767134860383121450 (20,202,020 samples, 1.00%)</title><rect x="723.9" y="549" width="11.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="726.90" y="559.5" ></text>
</g>
<g >
<title>syscall_trace_enter (10,101,010 samples, 0.50%)</title><rect x="523.3" y="437" width="5.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="526.30" y="447.5" ></text>
</g>
<g >
<title>nf_conntrack_in (10,101,010 samples, 0.50%)</title><rect x="346.3" y="181" width="5.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="349.30" y="191.5" ></text>
</g>
<g >
<title>pingora_core::protocols::http::date::get_cached_date (10,101,010 samples, 0.50%)</title><rect x="830.1" y="533" width="5.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="833.10" y="543.5" ></text>
</g>
<g >
<title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (101,010,100 samples, 5.00%)</title><rect x="535.1" y="549" width="59.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="538.10" y="559.5" >&lt;core:..</text>
</g>
<g >
<title>sched_balance_softirq (10,101,010 samples, 0.50%)</title><rect x="718.0" y="389" width="5.9" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="721.00" y="399.5" ></text>
</g>
<g >
<title>_ZN12pingora_core8services9listening16Service$LT$A$GT$12run_endpoint28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hb232457a5b6b64acE.llvm.1712944265698900751 (10,101,010 samples, 0.50%)</title><rect x="971.7" y="533" width="5.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="974.70" y="543.5" ></text>
</g>
<g >
<title>call_on_irq_stack (262,626,260 samples, 13.00%)</title><rect x="364.0" y="293" width="153.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="367.00" y="303.5" >call_on_irq_stack</text>
</g>
<g >
<title>neigh_xmit (131,313,130 samples, 6.50%)</title><rect x="86.7" y="197" width="76.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="89.70" y="207.5" >neigh_xmit</text>
</g>
<g >
<title>tcp_sendmsg (292,929,290 samples, 14.50%)</title><rect x="352.2" y="405" width="171.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="355.20" y="415.5" >tcp_sendmsg</text>
</g>
<g >
<title>tokio::sync::mpsc::chan::channel (20,202,020 samples, 1.00%)</title><rect x="1131.0" y="549" width="11.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1134.00" y="559.5" ></text>
</g>
<g >
<title>clock_gettime (20,202,020 samples, 1.00%)</title><rect x="257.8" y="517" width="11.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="260.80" y="527.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (10,101,010 samples, 0.50%)</title><rect x="511.5" y="181" width="5.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="514.50" y="191.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10,101,010 samples, 0.50%)</title><rect x="682.6" y="533" width="5.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="685.60" y="543.5" ></text>
</g>
<g >
<title>el0t_64_sync (80,808,080 samples, 4.00%)</title><rect x="305.0" y="501" width="47.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="308.00" y="511.5" >el0t..</text>
</g>
<g >
<title>call_timer_fn (10,101,010 samples, 0.50%)</title><rect x="511.5" y="213" width="5.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="514.50" y="223.5" ></text>
</g>
<g >
<title>__kernel_clock_gettime (20,202,020 samples, 1.00%)</title><rect x="257.8" y="501" width="11.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="260.80" y="511.5" ></text>
</g>
<g >
<title>cfree (20,202,020 samples, 1.00%)</title><rect x="759.3" y="533" width="11.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="762.30" y="543.5" ></text>
</g>
<g >
<title>recv (10,101,010 samples, 0.50%)</title><rect x="10.0" y="533" width="5.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>_ZN5tokio4sync4mpsc4list11Rx$LT$T$GT$3pop17h17fdd7d199aebd94E.llvm.14621705125684065338 (10,101,010 samples, 0.50%)</title><rect x="653.1" y="533" width="5.9" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="656.10" y="543.5" ></text>
</g>
<g >
<title>http::header::name::StandardHeader::from_bytes (10,101,010 samples, 0.50%)</title><rect x="1054.3" y="565" width="5.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1057.30" y="575.5" ></text>
</g>
<g >
<title>__arm64_sys_epoll_pwait (30,303,030 samples, 1.50%)</title><rect x="1060.2" y="469" width="17.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1063.20" y="479.5" ></text>
</g>
<g >
<title>_ZN5tokio7runtime4time6Driver13park_internal17h087fed728fc95ccaE.llvm.3365831258362887216 (10,101,010 samples, 0.50%)</title><rect x="741.6" y="533" width="5.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="744.60" y="543.5" ></text>
</g>
<g >
<title>nf_ct_bridge_pre (10,101,010 samples, 0.50%)</title><rect x="346.3" y="197" width="5.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="349.30" y="207.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::get (10,101,010 samples, 0.50%)</title><rect x="1024.8" y="565" width="5.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1027.80" y="575.5" ></text>
</g>
<g >
<title>&lt;tokio::sync::notify::Notified as core::ops::drop::Drop&gt;::drop (10,101,010 samples, 0.50%)</title><rect x="659.0" y="549" width="5.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="662.00" y="559.5" ></text>
</g>
<g >
<title>ip_queue_xmit (262,626,260 samples, 13.00%)</title><rect x="364.0" y="373" width="153.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="367.00" y="383.5" >ip_queue_xmit</text>
</g>
<g >
<title>tcp_v4_rcv (141,414,140 samples, 7.00%)</title><rect x="428.9" y="213" width="82.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="431.90" y="223.5" >tcp_v4_rcv</text>
</g>
<g >
<title>pingora_core::protocols::http::server::Session::is_body_done (10,101,010 samples, 0.50%)</title><rect x="629.5" y="533" width="5.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="632.50" y="543.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (10,101,010 samples, 0.50%)</title><rect x="275.5" y="565" width="5.9" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="278.50" y="575.5" ></text>
</g>
<g >
<title>mas_wr_store_entry (10,101,010 samples, 0.50%)</title><rect x="989.4" y="373" width="5.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="992.40" y="383.5" ></text>
</g>
<g >
<title>el0_da (10,101,010 samples, 0.50%)</title><rect x="1101.5" y="485" width="5.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1104.50" y="495.5" ></text>
</g>
<g >
<title>Timer_thread (80,808,080 samples, 4.00%)</title><rect x="1142.8" y="581" width="47.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1145.80" y="591.5" >Time..</text>
</g>
<g >
<title>&lt;&amp;std::os::unix::net::stream::UnixStream as std::io::Read&gt;::read (10,101,010 samples, 0.50%)</title><rect x="10.0" y="549" width="5.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>_ZN12pingora_core9protocols4http2v14body10BodyReader11prepare_buf17haef2417c445b1320E.llvm.2534244745717921635 (30,303,030 samples, 1.50%)</title><rect x="989.4" y="565" width="17.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="992.40" y="575.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (262,626,260 samples, 13.00%)</title><rect x="364.0" y="325" width="153.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="367.00" y="335.5" >__local_bh_enable_ip</text>
</g>
<g >
<title>pingora_http::RequestHeader::build (20,202,020 samples, 1.00%)</title><rect x="853.7" y="549" width="11.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="856.70" y="559.5" ></text>
</g>
<g >
<title>inet_sendmsg (353,535,350 samples, 17.50%)</title><rect x="15.9" y="437" width="206.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="18.90" y="447.5" >inet_sendmsg</text>
</g>
<g >
<title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (303,030,300 samples, 15.00%)</title><rect x="352.2" y="549" width="177.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="355.20" y="559.5" >&lt;&amp;mio::net::tcp::strea..</text>
</g>
<g >
<title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (10,101,010 samples, 0.50%)</title><rect x="635.4" y="549" width="5.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="638.40" y="559.5" ></text>
</g>
<g >
<title>el1h_64_irq (10,101,010 samples, 0.50%)</title><rect x="1166.4" y="357" width="5.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1169.40" y="367.5" ></text>
</g>
<g >
<title>nft_meta_get_eval (10,101,010 samples, 0.50%)</title><rect x="387.6" y="85" width="5.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="390.60" y="95.5" ></text>
</g>
<g >
<title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (10,101,010 samples, 0.50%)</title><rect x="924.5" y="533" width="5.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="927.50" y="543.5" ></text>
</g>
<g >
<title>pingora_timeout::timer::Timer::new (10,101,010 samples, 0.50%)</title><rect x="1119.2" y="565" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1122.20" y="575.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (20,202,020 samples, 1.00%)</title><rect x="417.1" y="213" width="11.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="420.10" y="223.5" ></text>
</g>
<g >
<title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (10,101,010 samples, 0.50%)</title><rect x="647.2" y="549" width="5.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="650.20" y="559.5" ></text>
</g>
<g >
<title>__do_softirq (10,101,010 samples, 0.50%)</title><rect x="1166.4" y="245" width="5.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1169.40" y="255.5" ></text>
</g>
<g >
<title>el0_svc (303,030,300 samples, 15.00%)</title><rect x="352.2" y="469" width="177.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="355.20" y="479.5" >el0_svc</text>
</g>
<g >
<title>__arm64_sys_recvfrom (80,808,080 samples, 4.00%)</title><rect x="305.0" y="437" width="47.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="308.00" y="447.5" >__ar..</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.50%)</title><rect x="983.5" y="549" width="5.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="986.50" y="559.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (20,202,020 samples, 1.00%)</title><rect x="340.4" y="341" width="11.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="343.40" y="351.5" ></text>
</g>
<g >
<title>el0_svc (50,505,050 samples, 2.50%)</title><rect x="1060.2" y="501" width="29.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1063.20" y="511.5" >el..</text>
</g>
<g >
<title>sock_poll (20,202,020 samples, 1.00%)</title><rect x="1060.2" y="453" width="11.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1063.20" y="463.5" ></text>
</g>
<g >
<title>el0t_64_sync (10,101,010 samples, 0.50%)</title><rect x="1136.9" y="453" width="5.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1139.90" y="463.5" ></text>
</g>
<g >
<title>el0t_64_sync (353,535,350 samples, 17.50%)</title><rect x="15.9" y="517" width="206.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="18.90" y="527.5" >el0t_64_sync</text>
</g>
</g>
</svg>
