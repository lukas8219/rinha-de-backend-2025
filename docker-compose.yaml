version: '3.4'
services:
  app1: &app
    build:
      context: .
      target: app
    hostname: app1
    restart: unless-stopped
    environment:
      PROCESSOR_URL: "http://payment-processor-default:8080"
      FALLBACK_URL: "http://payment-processor-fallback:8080"
      DISABLE_LOG: "true"
      POSTGRES_URL: "postgres://postgres:postgres@postgres:5432/rinha"
      AMQP_URL: "amqp://guest:guest@lavinmq:5672/"
      BATCH_INTERVAL: "50"
      PREFETCH_COUNT: "0"
      SHARD_COUNT: "3"
      SKIP_DELAY: "true"
    networks:
      - backend
      - payment-processor
    expose:
      - "3000"
    depends_on:
      lavinmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '30MB'
  app2:
    <<: *app
    hostname: app2
  app3:
    <<: *app
    hostname: app3

  consumer: &consumer
    <<: *app
    hostname: "1"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '35MB'
    build:
      context: .
      target: worker
  consumer2:
    <<: *consumer
    hostname: "2"
  consumer3:
    <<: *consumer
    hostname: "3"
  
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rinha
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - type: tmpfs
        target: /var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '60MB'

  lavinmq:
    image: cloudamqp/lavinmq:latest
    container_name: lavinmq
    healthcheck:
      test: ["CMD", "lavinmqctl", "status"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 5s
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '35MB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    ports:
      - "9999:9999"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '25MB'

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true